{"version":3,"file":"static/js/215.3ef13e1a.chunk.js","mappings":"8PASMA,GAAO,IAAIC,MAAOC,cAClBC,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IA+FZ,UA5FiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAASN,GAArC,eAAOS,EAAP,KAAeC,EAAf,KAEA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOf,EAAf,EAAeA,KACfS,GAAU,SAAAO,GAAI,yBAAUA,GAAV,cAAiBhB,EAAOe,GAAxB,GACf,EAEKE,EAAY,mCAAG,WAAMJ,GAAN,wEACnBA,EAAMK,iBADa,SAGjBX,GAAa,GAHI,SAKXJ,GAASgB,EAAAA,EAAAA,IAAkBX,IAASY,SALzB,uBAMXjB,GAASkB,EAAAA,EAAAA,IAAe,CAAEpB,MAAOO,EAAOP,MAAOC,SAAUM,EAAON,YAAakB,SANlE,OAOjBb,GAAa,GACbe,QAAQC,IAAI,YARK,kDAUjBD,QAAQC,IAAI,cAAZ,MAViB,yBAYjBd,EAAU,CACRT,KAAM,GACNC,MAAO,GACPC,SAAU,KAfK,6EAAH,sDAoBlB,OACE,gCACGI,IAAa,wCAEd,kBAAMkB,OAAO,IAAIC,SAAUR,EAA3B,WACE,4CAEA,4BACE,kBACES,GAAG,QACH1B,KAAK,QACL2B,KAAK,QACLC,aAAa,WACbb,MAAOP,EAAOP,MACd4B,SAAUjB,KAEZ,kBAAOkB,QAAQ,QAAf,+BAGF,4BACE,kBACEJ,GAAG,OACH1B,KAAK,OACL2B,KAAK,OACLC,aAAa,MACbb,MAAOP,EAAOR,KACd6B,SAAUjB,KAEZ,kBAAOkB,QAAQ,OAAf,sBAGF,4BACE,kBACEJ,GAAG,WACH1B,KAAK,WACL2B,KAAMjB,EAAS,WAAa,OAC5BkB,aAAa,mBACbb,MAAOP,EAAON,SACd2B,SAAUjB,KAEZ,kBAAOkB,QAAQ,WAAf,0BAGF,mBAAQH,KAAK,SAASI,QAAS,kBAAMpB,GAAU,SAAAK,GAAI,OAAKA,CAAL,GAApB,EAA/B,qBAIA,SAAC,KAAD,CAAMgB,GAAG,SAAT,mCAIA,mBAAQL,KAAK,SAAb,sBAGA,iCAAM/B,UAIb,C","sources":["pages/JoinPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n\n// import { publicApi } from 'http/http';\nimport { authLoginThunk, authRegisterThunk } from '../redux/auth/auth.thunk';\n\nconst year = new Date().getFullYear();\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst JoinPage = () => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [values, setValues] = useState(initialState);\n\n  const [isPass, setIsPass] = useState(true);\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      setIsLoading(true);\n      // await publicApi.post('/users/signup', values);\n      await dispatch(authRegisterThunk(values)).unwrap();\n      await dispatch(authLoginThunk({ email: values.email, password: values.password })).unwrap();\n      setIsLoading(false);\n      console.log('Success!');\n    } catch (e) {\n      console.log('Some error:', e);\n    } finally {\n      setValues({\n        name: '',\n        email: '',\n        password: '',\n      });\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <p>Loading ...</p>}\n\n      <form action=\"#\" onSubmit={handleSubmit}>\n        <h1>Please Sign In</h1>\n\n        <div>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"username\"\n            value={values.email}\n            onChange={handleChange}\n            />\n          <label htmlFor=\"email\">Email address</label>\n        </div>\n\n        <div>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"name\"\n            autoComplete=\"off\"\n            value={values.name}\n            onChange={handleChange}\n          />\n          <label htmlFor=\"name\">Name</label>\n        </div>\n\n        <div>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type={isPass ? 'password' : 'text'}\n            autoComplete=\"current-password\"\n            value={values.password}\n            onChange={handleChange}\n            />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n\n        <button type=\"button\" onClick={() => setIsPass(prev => !prev)}>\n          toggle\n        </button>\n\n        <Link to=\"/login\">\n          Already has account?\n        </Link>\n\n        <button type=\"submit\">\n          Sign In\n        </button>\n        <p>Â© {year}</p>\n      </form>\n    </>\n  );\n};\n\nexport default JoinPage;"],"names":["year","Date","getFullYear","initialState","name","email","password","dispatch","useDispatch","useState","isLoading","setIsLoading","values","setValues","isPass","setIsPass","handleChange","event","target","value","prev","handleSubmit","preventDefault","authRegisterThunk","unwrap","authLoginThunk","console","log","action","onSubmit","id","type","autoComplete","onChange","htmlFor","onClick","to"],"sourceRoot":""}